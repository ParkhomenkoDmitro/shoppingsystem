/**
 * This file was generated by the Jeddict
 */
package com.parkhomenko.domain;

import com.parkhomenko.product.MonetaryAmount;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

/**
 * @author dmytro
 */
@Entity
public class Product {

    @Column(nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Column(nullable = false)
    @Basic
    @NotNull(message = "Can't be null")
    @Size(min = 1, max = 255, message = "Length must be from 1 to 255")
    @Pattern(regexp = "^.{1,255}$", message = "Length must be from 1 to 255")
    private String name;

    @Column(nullable = false)
    @Basic
    @NotNull
    @Size(min = 1, max = 1000)
    private String shortDescription;

    @Column(unique = true, updatable = false, nullable = false)
    @Basic
    @NotNull
    @Size(min = 1, max = 255)
    private String model;

    @Column(nullable = false)
    @Basic
    private MonetaryAmount price;

    @Basic
    private boolean isAvailable = true;

    @OneToOne(targetEntity = SeoAttribute.class)
    private SeoAttribute seoAttribute;

    @OneToOne(targetEntity = TranslationProduct.class, mappedBy = "product")
    private TranslationProduct translationProduct;

    @OneToMany(targetEntity = Attachment.class)
    @JoinColumn(name = "PRODUCT_ID")
    private List<Attachment> attachments;

    @OneToMany(targetEntity = ProductEAV.class, mappedBy = "product")
    private List<ProductEAV> productEAVs;

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getShortDescription() {
        return this.shortDescription;
    }

    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    public String getModel() {
        return this.model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public MonetaryAmount getPrice() {
        return this.price;
    }

    public void setPrice(MonetaryAmount price) {
        this.price = price;
    }

    public boolean isIsAvailable() {
        return this.isAvailable;
    }

    public void setIsAvailable(boolean isAvailable) {
        this.isAvailable = isAvailable;
    }

    public SeoAttribute getSeoAttribute() {
        return this.seoAttribute;
    }

    public void setSeoAttribute(SeoAttribute seoAttribute) {
        this.seoAttribute = seoAttribute;
    }

    public TranslationProduct getTranslationProduct() {
        return this.translationProduct;
    }

    public void setTranslationProduct(TranslationProduct translationProduct) {
        this.translationProduct = translationProduct;
    }

    public List<Attachment> getAttachments() {
        if (attachments == null) {
            attachments = new ArrayList<>();
        }
        return this.attachments;
    }

    public void setAttachments(List<Attachment> attachments) {
        this.attachments = attachments;
    }

    public void addAttachment(Attachment attachment) {
        getAttachments().add(attachment);
    }

    public void removeAttachment(Attachment attachment) {
        getAttachments().remove(attachment);
    }

    public List<ProductEAV> getProductEAVs() {
        if (productEAVs == null) {
            productEAVs = new ArrayList<>();
        }
        return this.productEAVs;
    }

    public void setProductEAVs(List<ProductEAV> productEAVs) {
        this.productEAVs = productEAVs;
    }

    public void addProductEAV(ProductEAV productEAV) {
        getProductEAVs().add(productEAV);
        productEAV.setProduct(this);
    }

    public void removeProductEAV(ProductEAV productEAV) {
        getProductEAVs().remove(productEAV);
        productEAV.setProduct(null);
    }

}