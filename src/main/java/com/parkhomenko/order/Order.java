/**
 * This file was generated by the Jeddict
 */
package com.parkhomenko.order;

import com.parkhomenko.customer.Customer;
import com.parkhomenko.common.MonetaryAmount;
import java.time.LocalDateTime;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.Columns;
import org.hibernate.annotations.Type;

/**
 * @author dmytro
 */

@NoArgsConstructor
@Data
@Entity
@Table(name = "SHOP_ORDER")
public class Order {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private Integer goodsCount;

    @Columns(columns = {
        @Column(name = "money", nullable = false), 
        @Column(name = "currency", nullable = false)
    })
    @Type(type = "com.parkhomenko.common.MonetaryAmountCompositeUserType")
    private MonetaryAmount totalPrice;

    @Column(name = "ORDER_DATE")
    @Basic
    private LocalDateTime date;

    @OneToOne(targetEntity = Customer.class)
    private Customer customer;

    @OneToOne(targetEntity = TransportOrganization.class)
    private TransportOrganization transportOrganization;

    @OneToOne(targetEntity = PaymentSystem.class)
    private PaymentSystem paymentSystem;

    @OneToOne(targetEntity = State.class)
    private State state;

    @OneToMany(targetEntity = ProductInOrder.class, mappedBy = "shopOrder")
    private List<ProductInOrder> products;

    public void addProduct(ProductInOrder product) {
        getProducts().add(product);
        product.setShopOrder(this);
    }

    public void removeProduct(ProductInOrder product) {
        getProducts().remove(product);
        product.setShopOrder(null);
    }

}